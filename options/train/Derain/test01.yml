# TODO
# general settings
name: 01_Derain-Test_Rain100L
model_type: LightweightDerainModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: Rain100L
    type: PairedImageDataset
    dataroot_gt1: ../Dataset/Rain100L/Train/Gt
    dataroot_lq1: ../Dataset/Rain100L/Train/Rain

    filename_tmpl: '{}'
    io_backend:
      type: disk


    gt_size: 96
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 1
    batch_size_per_gpu: 6
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: Rain100L
    type: PairedImageDataset
    dataroot_gt: ../Dataset/Rain100L/Test/Gt
    dataroot_lq: ../Dataset/Rain100L/Test/Rain
    io_backend:
      type: disk

# network structures
network_g:
  type: LightweightDerainNet
  in_ch: 3
  base_ch: 16


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [20000]
    gamma: 0.5

  total_iter: 30000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: 20
  save_img: false
  save_vis: true  # 🆕 新增：是否保存频域分解的可视化结果
  save_vis_freq: 2  # 🆕 新增：频域分解可视化结果保存频率

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: false

# logging settings
logger:
  print_freq: 2
  save_checkpoint_freq: !!float 100
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
